// Generated by view binder compiler. Do not edit!
package com.example.photonotes_2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.photonotes_2.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.materialswitch.MaterialSwitch;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnSecond;

  @NonNull
  public final MaterialButton btnThird;

  @NonNull
  public final TextInputEditText etFilter;

  @NonNull
  public final TextInputLayout filterInputLayout;

  @NonNull
  public final ConstraintLayout mainRoot;

  @NonNull
  public final MaterialSwitch switchGrid;

  @NonNull
  public final MaterialToolbar toolbarMain;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull MaterialButton btnSecond,
      @NonNull MaterialButton btnThird, @NonNull TextInputEditText etFilter,
      @NonNull TextInputLayout filterInputLayout, @NonNull ConstraintLayout mainRoot,
      @NonNull MaterialSwitch switchGrid, @NonNull MaterialToolbar toolbarMain) {
    this.rootView = rootView;
    this.btnSecond = btnSecond;
    this.btnThird = btnThird;
    this.etFilter = etFilter;
    this.filterInputLayout = filterInputLayout;
    this.mainRoot = mainRoot;
    this.switchGrid = switchGrid;
    this.toolbarMain = toolbarMain;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSecond;
      MaterialButton btnSecond = ViewBindings.findChildViewById(rootView, id);
      if (btnSecond == null) {
        break missingId;
      }

      id = R.id.btnThird;
      MaterialButton btnThird = ViewBindings.findChildViewById(rootView, id);
      if (btnThird == null) {
        break missingId;
      }

      id = R.id.etFilter;
      TextInputEditText etFilter = ViewBindings.findChildViewById(rootView, id);
      if (etFilter == null) {
        break missingId;
      }

      id = R.id.filterInputLayout;
      TextInputLayout filterInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (filterInputLayout == null) {
        break missingId;
      }

      ConstraintLayout mainRoot = (ConstraintLayout) rootView;

      id = R.id.switchGrid;
      MaterialSwitch switchGrid = ViewBindings.findChildViewById(rootView, id);
      if (switchGrid == null) {
        break missingId;
      }

      id = R.id.toolbarMain;
      MaterialToolbar toolbarMain = ViewBindings.findChildViewById(rootView, id);
      if (toolbarMain == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, btnSecond, btnThird, etFilter,
          filterInputLayout, mainRoot, switchGrid, toolbarMain);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
